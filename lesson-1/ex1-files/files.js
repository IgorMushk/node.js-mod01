const fs = require('fs').promises;

fs.readdir(__dirname)
.then(files => {
    return Promise.all(
        files.map( async filemane =>{
            const stats =await fs.stat(filemane);
            return {
                Name: filemane,
                Size: stats.size,
                Date: stats.mtime,
            };
        }),
    );
})
.then(result => console.table(result))


/*
Давайте разберем этот код поподробнее. Сначала мы подключаем стандартный модуль fs
 с промесями:

const fs = require('fs').promises;

С переменной __dirnameмы считываем все файлы из текущего каталога. В результате выполнения 
промеса в переменную filesмы получим массив имен файлов и директорий из текущей директории.
Затем мы возвращаем массив промисов с анализом каждого элемента этого массива. Провести 
анализ помогает нам переменная stats, куда мы получаем информацию о текущем файле. Мы 
возвращаем объект с именем файла, а также stats.mtimeвремя последнего изменения файла, 
и stats.size, который определяет размер файла в байтах.

Результат выполнения этого промеса – переменная result, мы отдаем функции console.tableи 
получаем хорошую таблицу при выполнении нашего скрипта в консоли.
*/

/*
$ npm start

> ex1-file@1.0.0 start
> node files.js

┌─────────┬─────────────────────┬───────┬──────────────────────────┐
│ (index) │        Name         │ Size  │           Date           │
├─────────┼─────────────────────┼───────┼──────────────────────────┤
│    0    │    '.gitignore'     │  68   │ 2023-05-31T15:04:32.000Z │
│    1    │     'files.js'      │  399  │ 2023-11-15T09:25:23.463Z │
│    2    │   'node_modules'    │   0   │ 2023-11-15T09:01:48.850Z │
│    3    │ 'package-lock.json' │ 13602 │ 2023-11-15T09:01:48.844Z │
│    4    │   'package.json'    │  335  │ 2023-11-15T09:24:14.723Z │
└─────────┴─────────────────────┴───────┴──────────────────────────┘

$ npm start

> ex1-file@1.0.0 start
> node files.js

┌─────────┬─────────────────────┬───────┬──────────────────────────┐
│ (index) │        Name         │ Size  │           Date           │
├─────────┼─────────────────────┼───────┼──────────────────────────┤
│    0    │    '.gitignore'     │  68   │ 2023-05-31T15:04:32.000Z │
│    1    │     'files.js'      │  399  │ 2023-11-15T09:25:23.463Z │
│    2    │   'node_modules'    │   0   │ 2023-11-15T09:01:48.850Z │
│    3    │ 'package-lock.json' │ 13602 │ 2023-11-15T09:01:48.844Z │
│    4    │   'package.json'    │  335  │ 2023-11-15T09:24:14.723Z │
└─────────┴─────────────────────┴───────┴──────────────────────────┘

$ npm run dev

> ex1-file@1.0.0 dev
> nodemon files.js

[nodemon] 3.0.1
[nodemon] to restart at any time, enter `rs`
[nodemon] watching path(s): *.*
[nodemon] watching extensions: js,mjs,cjs,json
[nodemon] starting `node files.js`
┌─────────┬─────────────────────┬───────┬──────────────────────────┐
│ (index) │        Name         │ Size  │           Date           │
├─────────┼─────────────────────┼───────┼──────────────────────────┤
│    0    │    '.gitignore'     │  68   │ 2023-05-31T15:04:32.000Z │
│    1    │     'files.js'      │  399  │ 2023-11-15T09:25:23.463Z │
│    2    │   'node_modules'    │   0   │ 2023-11-15T09:01:48.850Z │
│    3    │ 'package-lock.json' │ 13602 │ 2023-11-15T09:01:48.844Z │
│    4    │   'package.json'    │  335  │ 2023-11-15T09:24:14.723Z │
└─────────┴─────────────────────┴───────┴──────────────────────────┘
[nodemon] clean exit - waiting for changes before restart

*/